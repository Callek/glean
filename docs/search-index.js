var searchIndex={};
searchIndex["benchmark"] = {"doc":"Glean benchmarks","i":[],"p":[]};
searchIndex["glean_core"] = {"doc":"Glean is a modern approach for recording and sending…","i":[[3,"CommonMetricData","glean_core","The common set of data shared across all different metric…",null,null],[12,"name","","The metric's name.",0,null],[12,"category","","The metric's category.",0,null],[12,"send_in_pings","","List of ping names to include this metric in.",0,null],[12,"lifetime","","The metric's lifetime.",0,null],[12,"disabled","","Whether or not the metric is disabled.",0,null],[12,"dynamic_label","","Dynamic label. When a LabeledMetric factory creates the…",0,null],[3,"Error","","A specialized [`Error`] type for this crate's operations.",null,null],[3,"Configuration","","The Glean configuration.",null,null],[12,"upload_enabled","","Whether upload should be enabled.",1,null],[12,"data_path","","Path to a directory to store all data in.",1,null],[12,"application_id","","The application ID (will be sanitized during…",1,null],[12,"max_events","","The maximum number of events to store before sending a…",1,null],[12,"delay_ping_lifetime_io","","Whether Glean should delay persistence of data from…",1,null],[3,"Glean","","The object holding meta information about a Glean instance.",null,null],[4,"Lifetime","","The supported metrics' lifetimes.",null,null],[13,"Ping","","The metric is reset with each sent ping",2,null],[13,"Application","","The metric is reset on application restart",2,null],[13,"User","","The metric is reset with each user profile",2,null],[4,"ErrorType","","The possible error types for metric recording. Note: the…",null,null],[13,"InvalidValue","","For when the value to be recorded does not match the…",3,null],[13,"InvalidLabel","","For when the label of a labeled metric does not match the…",3,null],[13,"InvalidState","","For when the metric caught an invalid state while recording",3,null],[13,"InvalidOverflow","","For when the value to be recorded overflows the…",3,null],[5,"test_get_num_recorded_errors","","Get the number of recorded errors for the given metric and…",null,[[["glean"],["commonmetricdata"],["str"],["option",["str"]],["errortype"]],[["string"],["result",["i32","string"]],["i32"]]]],[5,"global_glean","","Get a reference to the global Glean object.",null,[[],[["mutex"],["option",["mutex"]]]]],[5,"setup_glean","","Set or replace the global Glean object.",null,[[["glean"]],["result"]]],[11,"as_str","","String representation of the lifetime.",2,[[],["str"]]],[11,"new","","Create a new metadata object.",0,[[["into",["string"]],["string"]],["commonmetricdata"]]],[11,"should_record","","Whether this metric should be recorded.",0,[[["self"]],["bool"]]],[11,"storage_names","","The list of storages this metric should be recorded into.",0,[[["self"]]]],[11,"utf8_error","","Return a new UTF-8 error",4,[[],["error"]]],[11,"not_initialized","","Indicates an error that no requested global object is…",4,[[],["error"]]],[11,"as_str","","The error type's metric id",3,[[["self"]],["str"]]],[0,"metrics","","The different metric types supported by the Glean SDK to…",null,null],[3,"RecordedEvent","glean_core::metrics","Represents the recorded data for a single event.",null,null],[12,"timestamp","","The timestamp of when the event was recorded.",5,null],[12,"category","","The event's category.",5,null],[12,"name","","The event's name.",5,null],[12,"extra","","A map of all extra data values.",5,null],[3,"BooleanMetric","","A boolean metric.",null,null],[3,"CounterMetric","","A counter metric.",null,null],[3,"DatetimeMetric","","A datetime metric.",null,null],[3,"EventMetric","","An event metric.",null,null],[3,"CustomDistributionMetric","","A custom distribution metric.",null,null],[3,"LabeledMetric","","A labeled metric.",null,null],[3,"MemoryDistributionMetric","","A memory distribution metric.",null,null],[3,"PingType","","Stores information about a ping.",null,null],[12,"name","","The name of the ping.",6,null],[12,"include_client_id","","Whether the ping should include the client ID.",6,null],[12,"send_if_empty","","Whether the ping should be sent if it is empty",6,null],[12,"reason_codes","","The \"reason\" codes that this ping can send",6,null],[3,"QuantityMetric","","A quantity metric.",null,null],[3,"StringMetric","","A string metric.",null,null],[3,"StringListMetric","","A string list metric.",null,null],[3,"TimespanMetric","","A timespan metric.",null,null],[3,"TimingDistributionMetric","","A timing distribution metric.",null,null],[3,"UuidMetric","","An UUID metric.",null,null],[3,"DistributionData","","A snapshot of all buckets and the accumulated sum of a…",null,null],[12,"values","","A map containig the bucket index mapped to the accumulated…",7,null],[12,"sum","","The accumulated sum of all the samples in the distribution.",7,null],[4,"HistogramType","","Different kinds of histograms.",null,null],[13,"Linear","","A histogram with linear distributed buckets.",8,null],[13,"Exponential","","A histogram with exponential distributed buckets.",8,null],[4,"MemoryUnit","","Different resolutions supported by the memory related…",null,null],[13,"Byte","","",9,null],[13,"Kilobyte","","",9,null],[13,"Megabyte","","",9,null],[13,"Gigabyte","","",9,null],[4,"TimeUnit","","Different resolutions supported by the time related metric…",null,null],[13,"Nanosecond","","Truncate to nanosecond precision.",10,null],[13,"Microsecond","","Truncate to microsecond precision.",10,null],[13,"Millisecond","","Truncate to millisecond precision.",10,null],[13,"Second","","Truncate to second precision.",10,null],[13,"Minute","","Truncate to minute precision.",10,null],[13,"Hour","","Truncate to hour precision.",10,null],[13,"Day","","Truncate to day precision.",10,null],[4,"Metric","","The available metrics.",null,null],[13,"Boolean","","A boolean metric. See `BooleanMetric` for more information.",11,null],[13,"Counter","","A counter metric. See `CounterMetric` for more information.",11,null],[13,"CustomDistributionExponential","","A custom distribution with precomputed exponential…",11,null],[13,"CustomDistributionLinear","","A custom distribution with precomputed linear bucketing.…",11,null],[13,"Datetime","","A datetime metric. See `DatetimeMetric` for more…",11,null],[13,"Experiment","","An experiment metric. See `ExperimentMetric` for more…",11,null],[13,"Quantity","","A quantity metric. See `QuantityMetric` for more…",11,null],[13,"String","","A string metric. See `StringMetric` for more information.",11,null],[13,"StringList","","A string list metric. See `StringListMetric` for more…",11,null],[13,"Uuid","","A UUID metric. See `UuidMetric` for more information.",11,null],[13,"Timespan","","A timespan metric. See `TimespanMetric` for more…",11,null],[13,"TimingDistribution","","A timing distribution. See `TimingDistributionMetric` for…",11,null],[13,"MemoryDistribution","","A memory distribution. See `MemoryDistributionMetric` for…",11,null],[5,"combine_base_identifier_and_label","","Combines a metric's base identifier and label",null,[[["str"]],["string"]]],[5,"dynamic_label","","Validate a dynamic label, changing it to OTHER_LABEL if…",null,[[["glean"],["commonmetricdata"],["str"]],["string"]]],[5,"strip_label","","Strips the label off of a complete identifier",null,[[["str"]],["str"]]],[11,"new","","Create a new boolean metric.",12,[[["commonmetricdata"]],["self"]]],[11,"set","","Set to the specified boolean value.",12,[[["glean"],["self"],["bool"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",12,[[["glean"],["str"],["self"]],[["bool"],["option",["bool"]]]]],[11,"new","","Create a new counter metric.",13,[[["commonmetricdata"]],["self"]]],[11,"add","","Increase the counter by `amount`.",13,[[["glean"],["self"],["i32"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",13,[[["glean"],["str"],["self"]],[["option",["i32"]],["i32"]]]],[11,"new","","Create a new memory distribution metric.",14,[[["histogramtype"],["commonmetricdata"],["u64"]],["self"]]],[11,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",14,[[["glean"],["vec",["i64"]],["i64"],["self"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",14,[[["glean"],["str"],["self"]],[["option",["distributiondata"]],["distributiondata"]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",14,[[["glean"],["str"],["self"]],[["option",["string"]],["string"]]]],[11,"new","","Create a new datetime metric.",15,[[["timeunit"],["commonmetricdata"]],["self"]]],[11,"set_with_details","","Public facing API for setting the metric to a date/time…",15,[[["glean"],["u32"],["i32"],["self"]]]],[11,"set","","Public facing API for setting the metric to a date/time…",15,[[["glean"],["option",["datetime"]],["self"],["datetime"]]]],[11,"test_get_value_as_string","","Test-only API (exported for FFI purposes).",15,[[["glean"],["str"],["self"]],[["option",["string"]],["string"]]]],[11,"new","","Create a new event metric.",16,[[["vec",["string"]],["commonmetricdata"],["string"]],["self"]]],[11,"record","","Record an event.",16,[[["glean"],["option",["hashmap"]],["into",["option"]],["self"],["u64"]]]],[11,"test_has_value","","Test-only API (exported for FFI purposes).",16,[[["glean"],["str"],["self"]],["bool"]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",16,[[["glean"],["str"],["self"]],[["option",["vec"]],["vec",["recordedevent"]]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",16,[[["glean"],["str"],["self"]],["string"]]],[11,"new","","Create a new labeled metric from the given metric instance…",17,[[["vec",["string"]],["t"],["option",["vec"]]],["labeledmetric"]]],[11,"get","","Get a specific metric for a given label.",17,[[["str"],["self"]],["t"]]],[11,"get_submetric","","Get the template submetric.",17,[[["self"]],["t"]]],[11,"new","","Create a new memory distribution metric.",18,[[["commonmetricdata"],["memoryunit"]],["self"]]],[11,"accumulate","","Accumulates the provided sample in the metric.",18,[[["glean"],["self"],["u64"]]]],[11,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",18,[[["glean"],["vec",["i64"]],["i64"],["self"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",18,[[["glean"],["str"],["self"]],[["option",["distributiondata"]],["distributiondata"]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",18,[[["glean"],["str"],["self"]],[["option",["string"]],["string"]]]],[11,"as_bytes","","Convert a value in the given unit to bytes.",9,[[["u64"]],["u64"]]],[11,"new","","Create a new ping type for the given name, whether to…",6,[[["string"],["vec",["string"]],["into",["string"]],["bool"]],["self"]]],[11,"submit","","Submit the ping for eventual uploading",6,[[["glean"],["str"],["option",["str"]],["self"]],[["result",["bool"]],["bool"]]]],[11,"new","","Create a new quantity metric.",19,[[["commonmetricdata"]],["self"]]],[11,"set","","Set the value. Must be non-negative.",19,[[["glean"],["i64"],["self"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",19,[[["glean"],["str"],["self"]],[["i64"],["option",["i64"]]]]],[11,"new","","Create a new string metric.",20,[[["commonmetricdata"]],["self"]]],[11,"set","","Set to the specified value.",20,[[["glean"],["into",["string"]],["self"],["string"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",20,[[["glean"],["str"],["self"]],[["option",["string"]],["string"]]]],[11,"new","","Create a new string list metric.",21,[[["commonmetricdata"]],["self"]]],[11,"add","","Add a new string to the list.",21,[[["glean"],["into",["string"]],["self"],["string"]]]],[11,"set","","Set to a specific list of strings.",21,[[["glean"],["vec",["string"]],["self"],["string"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",21,[[["glean"],["str"],["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",21,[[["glean"],["str"],["self"]],[["option",["string"]],["string"]]]],[11,"format_pattern","","How to format the given TimeUnit, truncating the time if…",10,[[],["str"]]],[11,"duration_convert","","Convert a duration to the requested time unit.",10,[[["duration"]],["u64"]]],[11,"as_nanos","","Convert a duration in the given unit to nanoseconds.",10,[[["u64"]],["u64"]]],[11,"new","","Create a new timespan metric.",22,[[["timeunit"],["commonmetricdata"]],["self"]]],[11,"set_start","","Start tracking time for the provided metric.",22,[[["glean"],["self"],["u64"]]]],[11,"set_stop","","Stop tracking time for the provided metric. Sets the…",22,[[["glean"],["self"],["u64"]]]],[11,"cancel","","Abort a previous `start` call. No error is recorded if no…",22,[[["self"]]]],[11,"set_raw","","Explicitly set the timespan value.",22,[[["glean"],["bool"],["self"],["duration"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",22,[[["glean"],["str"],["self"]],[["option",["u64"]],["u64"]]]],[11,"new","","Create a new timing distribution metric.",23,[[["timeunit"],["commonmetricdata"]],["self"]]],[11,"set_start","","Start tracking time for the provided metric.",23,[[["self"],["u64"]],["timerid"]]],[11,"set_stop_and_accumulate","","Stop tracking time for the provided metric and associated…",23,[[["glean"],["timerid"],["self"],["u64"]]]],[11,"cancel","","Abort a previous `set_start` call. No error is recorded if…",23,[[["self"],["timerid"]]]],[11,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",23,[[["glean"],["vec",["i64"]],["i64"],["self"]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",23,[[["glean"],["str"],["self"]],[["option",["distributiondata"]],["distributiondata"]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",23,[[["glean"],["str"],["self"]],[["option",["string"]],["string"]]]],[11,"new","","Create a new UUID metric",24,[[["commonmetricdata"]],["self"]]],[11,"set","","Set to the specified value.",24,[[["glean"],["self"],["uuid"]]]],[11,"generate_and_set","","Generate a new random UUID and set the metric to it.",24,[[["glean"],["self"]],["uuid"]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",24,[[["glean"],["str"],["self"]],[["option",["string"]],["string"]]]],[6,"Datetime","","A datetime type.",null,null],[6,"TimerId","","Identifier for a running timer.",null,null],[8,"MetricType","","A `MetricType` describes common behavior across all metrics.",null,null],[10,"meta","","Access the stored metadata",25,[[["self"]],["commonmetricdata"]]],[10,"meta_mut","","Access the stored metadata mutable",25,[[["self"]],["commonmetricdata"]]],[11,"should_record","","Whether this metric should currently be recorded",25,[[["glean"],["self"]],["bool"]]],[11,"ping_section","","The ping section the metric fits into.",11,[[["self"]],["str"]]],[11,"as_json","","The JSON representation of the metric's data",11,[[["self"]],["jsonvalue"]]],[0,"ping","glean_core","Ping collection, assembly & submission.",null,null],[3,"PingMaker","glean_core::ping","Collect a ping's data, assemble it into its full payload…",null,null],[11,"new","","Create a new PingMaker.",26,[[],["self"]]],[11,"collect","","Collect a snapshot for the given ping from storage and…",26,[[["glean"],["str"],["option",["str"]],["self"],["pingtype"]],[["option",["jsonvalue"]],["jsonvalue"]]]],[11,"collect_string","","Collect a snapshot for the given ping from storage and…",26,[[["glean"],["str"],["option",["str"]],["self"],["pingtype"]],[["option",["string"]],["string"]]]],[11,"store_ping","","Store a ping to disk in the pings directory.",26,[[["str"],["path"],["self"],["jsonvalue"]],["result"]]],[11,"clear_pending_pings","","Clear any pending pings in the queue.",26,[[["path"],["self"]],["result"]]],[0,"storage","glean_core","Storage snapshotting.",null,null],[3,"StorageManager","glean_core::storage","Snapshot metrics from the underlying database.",null,null],[11,"snapshot","","Snapshot the given store and optionally clear it.",27,[[["str"],["database"],["self"],["bool"]],[["option",["string"]],["string"]]]],[11,"snapshot_as_json","","Snapshot the given store and optionally clear it.",27,[[["str"],["database"],["self"],["bool"]],[["option",["jsonvalue"]],["jsonvalue"]]]],[11,"snapshot_metric","","Get the current value of a single metric identified by name.",27,[[["str"],["database"],["self"]],[["metric"],["option",["metric"]]]]],[11,"snapshot_experiments_as_json","","Snapshot the experiments.",27,[[["database"],["str"],["self"]],[["option",["jsonvalue"]],["jsonvalue"]]]],[0,"upload","glean_core","Manages the pending pings queue and directory.",null,null],[3,"PingRequest","glean_core::upload","Represents a request to upload a ping.",null,null],[12,"document_id","","The Job ID to identify this request, this is the same as…",28,null],[12,"path","","The path for the server to upload the ping to.",28,null],[12,"body","","The body of the request, as a byte array. If gzip encoded,…",28,null],[12,"headers","","A map with all the headers to be sent with the request.",28,null],[3,"PingUploadManager","","Manages the pending pings queue and directory.",null,null],[4,"UploadResult","","The result of an attempted ping upload.",null,null],[13,"RecoverableFailure","","A recoverable failure.",29,null],[13,"UnrecoverableFailure","","An unrecoverable upload failure.",29,null],[13,"HttpStatus","","A HTTP response code.",29,null],[4,"PingUploadTask","","When asking for the next ping request to upload, the…",null,null],[13,"Upload","","A PingRequest popped from the front of the queue. See…",30,null],[13,"Wait","","A flag signaling that the pending pings directories are…",30,null],[13,"Done","","A flag signaling that the pending pings queue is empty and…",30,null],[5,"global_upload_manager","","Get a reference to the global Upload Manager object.",null,[[],[["option",["mutex"]],["mutex"]]]],[5,"setup_upload_manager","","Set or replace the global Glean object.",null,[[["pinguploadmanager"]],["result"]]],[5,"chunked_log_info","","Log payload in one go (all other OS).",null,[[["str"]]]],[0,"ffi_upload_result","","Result values of attempted ping uploads encoded for FFI use.",null,null],[17,"UPLOAD_RESULT_RECOVERABLE","glean_core::upload::ffi_upload_result","A recoverable error.",null,null],[17,"UPLOAD_RESULT_UNRECOVERABLE","","An unrecoverable error.",null,null],[17,"UPLOAD_RESULT_HTTP_STATUS","","A HTTP response code.",null,null],[11,"new","glean_core::upload","Creates a new PingRequest.",28,[[["str"],["jsonvalue"]],["self"]]],[11,"is_deletion_request","","Verifies if current request is for a deletion-request ping.",28,[[["self"]],["bool"]]],[11,"pretty_body","","Decompress and pretty-format the ping payload",28,[[["self"]],[["option",["string"]],["string"]]]],[11,"new","","Create a new PingUploadManager.",31,[[["pathbuf"],["into",["pathbuf"]],["bool"]],["self"]]],[11,"enqueue_ping","","Creates a `PingRequest` and adds it to the queue.",31,[[["str"],["self"],["jsonvalue"]]]],[11,"clear_ping_queue","","Clears the pending pings queue, leaves the…",31,[[["self"]],[["rwlockwriteguard",["vecdeque"]],["vecdeque",["pingrequest"]]]]],[11,"get_upload_task","","Gets the next `PingUploadTask`.",31,[[["self"],["bool"]],["pinguploadtask"]]],[11,"process_ping_upload_response","","Processes the response from an attempt to upload a ping.",31,[[["str"],["uploadresult"],["self"]]]],[6,"Result","glean_core","A specialized [`Result`] type for this crate's operations.",null,null],[11,"new","","Create and initialize a new Glean object.",32,[[["configuration"]],["result"]]],[11,"destroy_db","","Destroy the database. After this Glean needs to be…",32,[[["self"]]]],[11,"on_ready_to_submit_pings","","Called when Glean is initialized to the point where it can…",32,[[["self"]],["bool"]]],[11,"set_upload_enabled","","Set whether upload is enabled or not.",32,[[["self"],["bool"]],["bool"]]],[11,"is_upload_enabled","","Determine whether upload is enabled.",32,[[["self"]],["bool"]]],[11,"get_application_id","","Get the application ID as specified on instantiation.",32,[[["self"]],["str"]]],[11,"get_data_path","","Get the data path of this instance.",32,[[["self"]],["path"]]],[11,"storage","","Get a handle to the database.",32,[[["self"]],["database"]]],[11,"event_storage","","Get a handle to the event database.",32,[[["self"]],["eventdatabase"]]],[11,"get_max_events","","Get the maximum number of events to store before sending a…",32,[[["self"]],["usize"]]],[11,"get_upload_task","","Gets the next task for an uploader.",32,[[["self"],["bool"]],["pinguploadtask"]]],[11,"process_ping_upload_response","","Processes the response from an attempt to upload a ping.",32,[[["str"],["uploadresult"],["self"]]]],[11,"snapshot","","Take a snapshot for the given store and optionally clear it.",32,[[["str"],["self"],["bool"]],["string"]]],[11,"submit_ping","","Collect and submit a ping for eventual uploading.",32,[[["str"],["option",["str"]],["self"],["pingtype"]],[["result",["bool"]],["bool"]]]],[11,"submit_ping_by_name","","Collect and submit a ping by name for eventual uploading.",32,[[["str"],["self"],["option",["str"]]],[["result",["bool"]],["bool"]]]],[11,"get_ping_by_name","","Get a `PingType` by name.",32,[[["str"],["self"]],[["option",["pingtype"]],["pingtype"]]]],[11,"register_ping_type","","Register a new `PingType`.",32,[[["self"],["pingtype"]]]],[11,"set_experiment_active","","Indicate that an experiment is running. Glean will then…",32,[[["option",["hashmap"]],["hashmap",["string","string"]],["self"],["string"]]]],[11,"set_experiment_inactive","","Indicate that an experiment is no longer running.",32,[[["self"],["string"]]]],[11,"persist_ping_lifetime_data","","Persist Lifetime::Ping data that might be in memory in…",32,[[["self"]],["result"]]],[11,"clear_application_lifetime_metrics","","** This is not meant to be used directly.**",32,[[["self"]]]],[11,"is_first_run","","Return whether or not this is the first run on this profile.",32,[[["self"]],["bool"]]],[11,"set_dirty_flag","","** This is not meant to be used directly.**",32,[[["self"],["bool"]]]],[11,"is_dirty_flag_set","","** This is not meant to be used directly.**",32,[[["self"]],["bool"]]],[11,"test_is_experiment_active","","Test-only API (exported for FFI purposes).",32,[[["self"],["string"]],["bool"]]],[11,"test_get_experiment_data_as_json","","Test-only API (exported for FFI purposes).",32,[[["self"],["string"]],[["option",["string"]],["string"]]]],[11,"test_clear_all_stores","","Test-only API (exported for FFI purposes).",32,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","glean_core::metrics","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"to_bytes","","",5,[[["self"]],[["result",["vec","dataerror"]],["dataerror"],["vec",["u8"]]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"to_bytes","","",8,[[["self"]],[["result",["vec","dataerror"]],["dataerror"],["vec",["u8"]]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"to_bytes","","",7,[[["self"]],[["result",["vec","dataerror"]],["dataerror"],["vec",["u8"]]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"to_bytes","","",9,[[["self"]],[["result",["vec","dataerror"]],["dataerror"],["vec",["u8"]]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"to_bytes","","",10,[[["self"]],[["result",["vec","dataerror"]],["dataerror"],["vec",["u8"]]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"to_bytes","","",11,[[["self"]],[["result",["vec","dataerror"]],["dataerror"],["vec",["u8"]]]]],[11,"from","glean_core::ping","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","glean_core::storage","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","glean_core::upload","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"meta","glean_core::metrics","",12,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",12,[[["self"]],["commonmetricdata"]]],[11,"meta","","",13,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",13,[[["self"]],["commonmetricdata"]]],[11,"meta","","",14,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",14,[[["self"]],["commonmetricdata"]]],[11,"meta","","",15,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",15,[[["self"]],["commonmetricdata"]]],[11,"meta","","",16,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",16,[[["self"]],["commonmetricdata"]]],[11,"meta","","",18,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",18,[[["self"]],["commonmetricdata"]]],[11,"meta","","",19,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",19,[[["self"]],["commonmetricdata"]]],[11,"meta","","",20,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",20,[[["self"]],["commonmetricdata"]]],[11,"meta","","",21,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",21,[[["self"]],["commonmetricdata"]]],[11,"meta","","",22,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",22,[[["self"]],["commonmetricdata"]]],[11,"meta","","",23,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",23,[[["self"]],["commonmetricdata"]]],[11,"meta","","",24,[[["self"]],["commonmetricdata"]]],[11,"meta_mut","","",24,[[["self"]],["commonmetricdata"]]],[11,"from","glean_core","",4,[[["handleerror"]],["error"]]],[11,"from","","",4,[[["error"]],["error"]]],[11,"from","","",4,[[["storeerror"]],["error"]]],[11,"from","","",4,[[["error"]],["error"]]],[11,"from","","",4,[[["osstring"]],["error"]]],[11,"from","","",4,[[["infallible"]],["error"]]],[11,"from","glean_core::upload","",29,[[["u32"]],["self"]]],[11,"clone","glean_core","",2,[[["self"]],["lifetime"]]],[11,"clone","","",0,[[["self"]],["commonmetricdata"]]],[11,"clone","glean_core::metrics","",5,[[["self"]],["recordedevent"]]],[11,"clone","","",8,[[["self"]],["histogramtype"]]],[11,"clone","","",12,[[["self"]],["booleanmetric"]]],[11,"clone","","",13,[[["self"]],["countermetric"]]],[11,"clone","","",16,[[["self"]],["eventmetric"]]],[11,"clone","","",17,[[["self"]],["labeledmetric"]]],[11,"clone","","",9,[[["self"]],["memoryunit"]]],[11,"clone","","",6,[[["self"]],["pingtype"]]],[11,"clone","","",19,[[["self"]],["quantitymetric"]]],[11,"clone","","",20,[[["self"]],["stringmetric"]]],[11,"clone","","",21,[[["self"]],["stringlistmetric"]]],[11,"clone","","",10,[[["self"]],["timeunit"]]],[11,"clone","","",24,[[["self"]],["uuidmetric"]]],[11,"clone","","",11,[[["self"]],["metric"]]],[11,"clone","glean_core::upload","",28,[[["self"]],["pingrequest"]]],[11,"clone","glean_core","",1,[[["self"]],["configuration"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",0,[[],["commonmetricdata"]]],[11,"default","glean_core::ping","",26,[[],["self"]]],[11,"eq","glean_core","",2,[[["self"],["lifetime"]],["bool"]]],[11,"eq","glean_core::metrics","",5,[[["self"],["recordedevent"]],["bool"]]],[11,"ne","","",5,[[["self"],["recordedevent"]],["bool"]]],[11,"eq","","",10,[[["self"],["timeunit"]],["bool"]]],[11,"eq","","",11,[[["self"],["metric"]],["bool"]]],[11,"ne","","",11,[[["self"],["metric"]],["bool"]]],[11,"eq","glean_core::upload","",28,[[["self"],["pingrequest"]],["bool"]]],[11,"ne","","",28,[[["self"],["pingrequest"]],["bool"]]],[11,"eq","","",30,[[["pinguploadtask"],["self"]],["bool"]]],[11,"ne","","",30,[[["pinguploadtask"],["self"]],["bool"]]],[11,"fmt","glean_core","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","glean_core::metrics","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","glean_core::upload","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","glean_core","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"try_from","","",2,[[["i32"]],[["lifetime"],["result",["lifetime"]]]]],[11,"try_from","","",3,[[["i32"]],[["errortype"],["result",["errortype"]]]]],[11,"try_from","glean_core::metrics","",8,[[["i32"]],[["result",["histogramtype"]],["histogramtype"]]]],[11,"try_from","","",9,[[["i32"]],[["result",["memoryunit"]],["memoryunit"]]]],[11,"try_from","","",10,[[["i32"]],[["result",["timeunit"]],["timeunit"]]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]]],"p":[[3,"CommonMetricData"],[3,"Configuration"],[4,"Lifetime"],[4,"ErrorType"],[3,"Error"],[3,"RecordedEvent"],[3,"PingType"],[3,"DistributionData"],[4,"HistogramType"],[4,"MemoryUnit"],[4,"TimeUnit"],[4,"Metric"],[3,"BooleanMetric"],[3,"CounterMetric"],[3,"CustomDistributionMetric"],[3,"DatetimeMetric"],[3,"EventMetric"],[3,"LabeledMetric"],[3,"MemoryDistributionMetric"],[3,"QuantityMetric"],[3,"StringMetric"],[3,"StringListMetric"],[3,"TimespanMetric"],[3,"TimingDistributionMetric"],[3,"UuidMetric"],[8,"MetricType"],[3,"PingMaker"],[3,"StorageManager"],[3,"PingRequest"],[4,"UploadResult"],[4,"PingUploadTask"],[3,"PingUploadManager"],[3,"Glean"]]};
searchIndex["glean_ffi"] = {"doc":"","i":[[17,"UPLOAD_RESULT_RECOVERABLE","glean_ffi","A recoverable error.",null,null],[17,"UPLOAD_RESULT_UNRECOVERABLE","","An unrecoverable error.",null,null],[17,"UPLOAD_RESULT_HTTP_STATUS","","A HTTP response code.",null,null],[3,"FfiConfiguration","","Configuration over FFI.",null,null],[12,"data_dir","","",0,null],[12,"package_name","","",0,null],[12,"upload_enabled","","",0,null],[12,"max_events","","",0,null],[12,"delay_ping_lifetime_io","","",0,null],[5,"glean_enable_logging","","Initialize the logging system based on the target…",null,[[]]],[5,"glean_initialize","","Safety",null,[[],["u8"]]],[5,"glean_on_ready_to_submit_pings","","",null,[[],["u8"]]],[5,"glean_is_upload_enabled","","",null,[[],["u8"]]],[5,"glean_set_upload_enabled","","",null,[[["u8"]]]],[5,"glean_submit_ping_by_name","","",null,[[["ffistr"]],["u8"]]],[5,"glean_ping_collect","","",null,[[["ffistr"],["u64"]]]],[5,"glean_set_experiment_active","","",null,[[["ffistr"],["i32"]]]],[5,"glean_set_experiment_inactive","","",null,[[["ffistr"]]]],[5,"glean_experiment_test_is_active","","",null,[[["ffistr"]],["u8"]]],[5,"glean_experiment_test_get_data","","",null,[[["ffistr"]]]],[5,"glean_clear_application_lifetime_metrics","","",null,[[]]],[5,"glean_set_dirty_flag","","",null,[[["u8"]]]],[5,"glean_is_dirty_flag_set","","",null,[[],["u8"]]],[5,"glean_test_clear_all_stores","","",null,[[]]],[5,"glean_destroy_glean","","",null,[[]]],[5,"glean_is_first_run","","",null,[[],["u8"]]],[5,"glean_get_upload_task","","",null,[[["u8"]]]],[5,"glean_process_ping_upload_response","","Process and free a `FfiPingUploadTask`.",null,[[["u32"]]]],[5,"glean_initialize_standalone_uploader","","",null,[[["ffistr"]],["u8"]]],[5,"glean_str_free","","Public destructor for strings managed by the other side of…",null,[[]]],[0,"byte_buffer","","ByteBuffer is a struct that represents an array of bytes…",null,null],[3,"ByteBuffer","glean_ffi::byte_buffer","ByteBuffer is a struct that represents an array of bytes…",null,null],[11,"new_with_size","","Creates a `ByteBuffer` of the requested size, zero-filled.",1,[[["usize"]],["self"]]],[11,"from_vec","","Creates a `ByteBuffer` instance from a `Vec` instance.",1,[[["vec",["u8"]],["u8"]],["self"]]],[11,"into_vec","","Convert this `ByteBuffer` into a Vec. This is the only way…",1,[[],[["vec",["u8"]],["u8"]]]],[11,"destroy","","Reclaim memory stored in this ByteBuffer.",1,[[]]],[0,"ping_type","glean_ffi","",null,null],[5,"glean_destroy_ping_type","glean_ffi::ping_type","",null,[[["u64"]]]],[5,"glean_new_ping_type","","",null,[[["i32"],["ffistr"],["u8"]],["u64"]]],[5,"glean_test_has_ping_type","","",null,[[["ffistr"]],["u8"]]],[5,"glean_register_ping_type","","",null,[[["u64"]]]],[0,"upload","glean_ffi","FFI compatible types for the upload mechanism.",null,null],[4,"FfiPingUploadTask","glean_ffi::upload","A FFI-compatible representation for the PingUploadTask.",null,null],[13,"Upload","","",2,null],[12,"document_id","glean_ffi::upload::FfiPingUploadTask","",3,null],[12,"path","","",3,null],[12,"body","","",3,null],[12,"headers","","",3,null],[13,"Wait","glean_ffi::upload","",2,null],[13,"Done","","",2,null],[0,"upload_result","","Result values of attempted ping uploads encoded for FFI use.",null,null],[17,"UPLOAD_RESULT_RECOVERABLE","glean_ffi::upload::upload_result","A recoverable error.",null,null],[17,"UPLOAD_RESULT_UNRECOVERABLE","","An unrecoverable error.",null,null],[17,"UPLOAD_RESULT_HTTP_STATUS","","A HTTP response code.",null,null],[14,"define_infallible_handle_map_deleter","glean_ffi","",null,null],[14,"define_metric","","Define the global handle map, constructor and destructor…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","glean_ffi::byte_buffer","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","glean_ffi::upload","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"drop","","",2,[[["self"]]]],[11,"from","glean_ffi::byte_buffer","",1,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from","glean_ffi::upload","",2,[[["pinguploadtask"]],["self"]]],[11,"default","glean_ffi::byte_buffer","",1,[[],["self"]]],[11,"ffi_default","glean_ffi::upload","",2,[[],["ffipinguploadtask"]]],[11,"into_ffi_value","","",2,[[],["ffipinguploadtask"]]]],"p":[[3,"FfiConfiguration"],[3,"ByteBuffer"],[4,"FfiPingUploadTask"],[13,"Upload"]]};
searchIndex["glean_preview"] = {"doc":"Glean is a modern approach for recording and sending…","i":[[5,"global_glean","glean_preview","Get a reference to the global Glean object.",null,[[],[["mutex"],["option",["mutex"]]]]],[5,"setup_glean","","Set or replace the global Glean object.",null,[[["glean"]],[["error"],["result",["error"]]]]],[3,"CommonMetricData","","The common set of data shared across all different metric…",null,null],[12,"name","","The metric's name.",0,null],[12,"category","","The metric's category.",0,null],[12,"send_in_pings","","List of ping names to include this metric in.",0,null],[12,"lifetime","","The metric's lifetime.",0,null],[12,"disabled","","Whether or not the metric is disabled.",0,null],[12,"dynamic_label","","Dynamic label. When a LabeledMetric factory creates the…",0,null],[3,"Error","","A specialized [`Error`] type for this crate's operations.",null,null],[3,"Glean","","The object holding meta information about a Glean instance.",null,null],[4,"Lifetime","","The supported metrics' lifetimes.",null,null],[13,"Ping","","The metric is reset with each sent ping",1,null],[13,"Application","","The metric is reset on application restart",1,null],[13,"User","","The metric is reset with each user profile",1,null],[6,"Result","","A specialized [`Result`] type for this crate's operations.",null,null],[3,"Configuration","","The Glean configuration.",null,null],[12,"upload_enabled","","Whether upload should be enabled.",2,null],[12,"data_path","","Path to a directory to store all data in.",2,null],[12,"application_id","","The application ID (will be sanitized during…",2,null],[12,"max_events","","The maximum number of events to store before sending a…",2,null],[12,"delay_ping_lifetime_io","","Whether Glean should delay persistence of data from…",2,null],[12,"channel","","The release channel the application is on, if known.",2,null],[3,"ClientInfoMetrics","","Metrics included in every ping as `client_info`.",null,null],[12,"app_build","","The build identifier generated by the CI system (e.g.…",3,null],[12,"app_display_version","","The user visible version string (e.g. \"1.0.3\").",3,null],[5,"initialize","","Create and initialize a new Glean object.",null,[[["clientinfometrics"],["configuration"]],["result"]]],[5,"set_upload_enabled","","Set whether upload is enabled or not.",null,[[["bool"]],["bool"]]],[5,"is_upload_enabled","","Determine whether upload is enabled.",null,[[],["bool"]]],[5,"register_ping_type","","Register a new `PingType`.",null,[[["pingtype"]]]],[5,"submit_ping","","Collect and submit a ping for eventual uploading.",null,[[["pingtype"],["str"],["option",["str"]]],["bool"]]],[5,"submit_ping_by_name","","Collect and submit a ping for eventual uploading by name.",null,[[["str"],["option",["str"]]],["bool"]]],[11,"unknown","","Create the client info with dummy values for all.",3,[[],["self"]]],[0,"metrics","","The different metric types supported by the Glean SDK to…",null,null],[3,"PingType","glean_preview::metrics","Stores information about a ping.",null,null],[11,"new","","Create a new ping type for the given name, whether to…",4,[[["string"],["vec",["string"]],["into",["string"]],["bool"]],["self"]]],[11,"submit","","Submit the ping.",4,[[["str"],["self"],["option",["str"]]],["bool"]]],[11,"from","glean_preview","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","glean_preview::metrics","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"fmt","glean_preview","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"try_from","","",1,[[["i32"]],[["lifetime"],["result",["lifetime"]]]]],[11,"clone","","",0,[[["self"]],["commonmetricdata"]]],[11,"clone","","",1,[[["self"]],["lifetime"]]],[11,"eq","","",1,[[["self"],["lifetime"]],["bool"]]],[11,"from","","",5,[[["errorkind"]],["error"]]],[11,"from","","",5,[[["storeerror"]],["error"]]],[11,"from","","",5,[[["osstring"]],["error"]]],[11,"from","","",5,[[["handleerror"]],["error"]]],[11,"from","","",5,[[["error"]],["error"]]],[11,"from","","",5,[[["error"]],["error"]]],[11,"from","","",5,[[["infallible"]],["error"]]],[11,"default","","",1,[[],["lifetime"]]],[11,"default","","",0,[[],["commonmetricdata"]]],[11,"clone","","",2,[[["self"]],["configuration"]]],[11,"clone","glean_preview::metrics","",4,[[["self"]],["pingtype"]]],[11,"fmt","glean_preview","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","glean_preview::metrics","",4,[[["formatter"],["self"]],["result"]]],[11,"new","glean_preview","Create a new metadata object.",0,[[["a"],["c"],["b"]],["commonmetricdata"]]],[11,"should_record","","Whether this metric should be recorded.",0,[[["self"]],["bool"]]],[11,"storage_names","","The list of storages this metric should be recorded into.",0,[[["self"]]]],[11,"utf8_error","","Return a new UTF-8 error",5,[[],["error"]]],[11,"not_initialized","","Indicates an error that no requested global object is…",5,[[],["error"]]],[11,"new","","Create and initialize a new Glean object.",6,[[["configuration"]],[["error"],["result",["glean","error"]],["glean"]]]],[11,"destroy_db","","Destroy the database. After this Glean needs to be…",6,[[["self"]]]],[11,"on_ready_to_submit_pings","","Called when Glean is initialized to the point where it can…",6,[[["self"]],["bool"]]],[11,"set_upload_enabled","","Set whether upload is enabled or not.",6,[[["self"],["bool"]],["bool"]]],[11,"is_upload_enabled","","Determine whether upload is enabled.",6,[[["self"]],["bool"]]],[11,"get_application_id","","Get the application ID as specified on instantiation.",6,[[["self"]],["str"]]],[11,"get_data_path","","Get the data path of this instance.",6,[[["self"]],["path"]]],[11,"storage","","Get a handle to the database.",6,[[["self"]],["database"]]],[11,"event_storage","","Get a handle to the event database.",6,[[["self"]],["eventdatabase"]]],[11,"get_max_events","","Get the maximum number of events to store before sending a…",6,[[["self"]],["usize"]]],[11,"get_upload_task","","Gets the next task for an uploader.",6,[[["self"],["bool"]],["pinguploadtask"]]],[11,"process_ping_upload_response","","Processes the response from an attempt to upload a ping.",6,[[["str"],["uploadresult"],["self"]]]],[11,"snapshot","","Take a snapshot for the given store and optionally clear it.",6,[[["str"],["self"],["bool"]],["string"]]],[11,"submit_ping","","Collect and submit a ping for eventual uploading.",6,[[["str"],["pingtype"],["option",["str"]],["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"submit_ping_by_name","","Collect and submit a ping by name for eventual uploading.",6,[[["str"],["self"],["option",["str"]]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"get_ping_by_name","","Get a `PingType` by name.",6,[[["str"],["self"]],[["option",["pingtype"]],["pingtype"]]]],[11,"register_ping_type","","Register a new `PingType`.",6,[[["self"],["pingtype"]]]],[11,"set_experiment_active","","Indicate that an experiment is running. Glean will then…",6,[[["string"],["hashmap",["string","string","randomstate"]],["option",["hashmap"]],["self"]]]],[11,"set_experiment_inactive","","Indicate that an experiment is no longer running.",6,[[["string"],["self"]]]],[11,"persist_ping_lifetime_data","","Persist Lifetime::Ping data that might be in memory in…",6,[[["self"]],[["error"],["result",["error"]]]]],[11,"clear_application_lifetime_metrics","","** This is not meant to be used directly.**",6,[[["self"]]]],[11,"is_first_run","","Return whether or not this is the first run on this profile.",6,[[["self"]],["bool"]]],[11,"set_dirty_flag","","** This is not meant to be used directly.**",6,[[["self"],["bool"]]]],[11,"is_dirty_flag_set","","** This is not meant to be used directly.**",6,[[["self"]],["bool"]]],[11,"test_is_experiment_active","","Test-only API (exported for FFI purposes).",6,[[["string"],["self"]],["bool"]]],[11,"test_get_experiment_data_as_json","","Test-only API (exported for FFI purposes).",6,[[["string"],["self"]],[["option",["string"]],["string"]]]],[11,"test_clear_all_stores","","Test-only API (exported for FFI purposes).",6,[[["self"]]]],[11,"as_str","","String representation of the lifetime.",1,[[],["str"]]]],"p":[[3,"CommonMetricData"],[4,"Lifetime"],[3,"Configuration"],[3,"ClientInfoMetrics"],[3,"PingType"],[3,"Error"],[3,"Glean"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);