var N=null,E="",T="t",U="u",searchIndex={};
var R=["glean_core","string","commonmetricdata","test_get_value","Test-only API (exported for FFI purposes).","glean","option","should_record","category","jsonvalue","database","snapshot","result","to_string","try_from","borrow_mut","try_into","type_id","borrow","typeid","glean_core::metrics","to_owned","clone_into","dataerror","glean_core::ping","glean_core::storage","lifetime","errorkind","default","formatter","backtrace","CommonMetricData","Lifetime","ErrorType","BooleanMetric","CounterMetric","StringMetric","StringListMetric","UuidMetric","MetricType","PingMaker","StorageManager","glean_ffi","ffistr","externerror"];
searchIndex[R[42]]={"doc":E,"i":[[5,"glean_enable_logging",R[42],"Initialize the logging system based on the target…",N,[[]]],[5,"glean_initialize",E,E,N,[[[R[43]],["u8"]],["u64"]]],[5,"glean_is_initialized",E,E,N,[[["u64"]],["u8"]]],[5,"glean_is_upload_enabled",E,E,N,[[["u64"]],["u8"]]],[5,"glean_set_upload_enabled",E,E,N,[[["u8"],["u64"]]]],[5,"glean_send_ping",E,E,N,[[[R[43]],["u8"],["u64"]],["u8"]]],[5,"glean_new_boolean_metric",E,E,N,[[[R[43]],["i32"],["u8"]],["u64"]]],[5,"glean_new_string_metric",E,E,N,[[[R[43]],["i32"],["u8"]],["u64"]]],[5,"glean_new_counter_metric",E,E,N,[[[R[43]],["i32"],["u8"]],["u64"]]],[5,"glean_counter_should_record",E,E,N,[[["u64"]],["u8"]]],[5,"glean_counter_add",E,E,N,[[["i32"],["u64"]]]],[5,"glean_counter_test_has_value",E,E,N,[[[R[43]],["u64"]],["u8"]]],[5,"glean_counter_test_get_value",E,E,N,[[[R[43]],["u64"]],["i32"]]],[5,"glean_boolean_should_record",E,E,N,[[["u64"]],["u8"]]],[5,"glean_boolean_set",E,E,N,[[["u8"],["u64"]]]],[5,"glean_boolean_test_has_value",E,E,N,[[[R[43]],["u64"]],["u8"]]],[5,"glean_boolean_test_get_value",E,E,N,[[[R[43]],["u64"]],["u8"]]],[5,"glean_string_should_record",E,E,N,[[["u64"]],["u8"]]],[5,"glean_string_set",E,E,N,[[[R[43]],["u64"]]]],[5,"glean_string_test_has_value",E,E,N,[[[R[43]],["u64"]],["u8"]]],[5,"glean_string_test_get_value",E,E,N,[[[R[43]],["u64"]]]],[5,"glean_ping_collect",E,E,N,[[[R[43]],["u64"]]]],[5,"glean_destroy_glean",E,E,N,[[[R[44]],["u64"]]]],[5,"glean_destroy_boolean_metric",E,E,N,[[[R[44]],["u64"]]]],[5,"glean_destroy_string_metric",E,E,N,[[[R[44]],["u64"]]]],[5,"glean_destroy_counter_metric",E,E,N,[[[R[44]],["u64"]]]],[5,"glean_str_free",E,"Public destructor for strings managed by the other side of…",N,[[]]]],"p":[]};
searchIndex[R[0]]={"doc":E,"i":[[3,R[31],R[0],E,N,N],[12,"name",E,E,0,N],[12,R[8],E,E,0,N],[12,"send_in_pings",E,E,0,N],[12,R[26],E,E,0,N],[12,"disabled",E,E,0,N],[3,"Error",E,"A specialized [`Error`] type for this crate's operations.",N,N],[3,"Glean",E,E,N,N],[4,R[32],E,E,N,N],[13,"Ping",E,"The metric is reset with each sent ping",1,N],[13,"Application",E,"The metric is reset on application restart",1,N],[13,"User",E,"The metric is reset with each user profile",1,N],[4,R[33],E,E,N,N],[13,"InvalidValue",E,E,2,N],[13,"InvalidLabel",E,E,2,N],[11,"as_str",E,E,1,[[],["str"]]],[11,"new",E,"Create a new metadata object",0,[[[R[1]],["into",[R[1]]]],[R[2]]]],[11,"identifier",E,E,0,[[["self"]],[R[1]]]],[11,R[7],E,E,0,[[["self"]],["bool"]]],[11,"storage_names",E,E,0,[[["self"]]]],[11,"kind",E,"Access the [`ErrorKind`] member.",3,[[["self"]],[R[27]]]],[11,R[13],E,E,2,[[["self"]],["str"]]],[0,"metrics",E,E,N,N],[3,R[34],R[20],E,N,N],[3,R[35],E,E,N,N],[3,R[36],E,E,N,N],[3,R[37],E,E,N,N],[3,R[38],E,E,N,N],[4,"Metric",E,E,N,N],[13,"Boolean",E,E,4,N],[13,"Counter",E,E,4,N],[13,"String",E,E,4,N],[13,"StringList",E,E,4,N],[13,"Uuid",E,E,4,N],[11,"new",E,E,5,[[[R[2]]],["self"]]],[11,"set",E,E,5,[[[R[5]],["self"],["bool"]]]],[11,R[3],E,R[4],5,[[["str"],[R[5]],["self"]],[[R[6],["bool"]],["bool"]]]],[11,"new",E,E,6,[[[R[2]]],["self"]]],[11,"add",E,E,6,[[["i32"],[R[5]],["self"]]]],[11,R[3],E,R[4],6,[[["str"],[R[5]],["self"]],[["i32"],[R[6],["i32"]]]]],[11,"new",E,E,7,[[[R[2]]],["self"]]],[11,"set",E,E,7,[[[R[1]],[R[5]],["self"],["into",[R[1]]]]]],[11,R[3],E,R[4],7,[[["str"],[R[5]],["self"]],[[R[1]],[R[6],[R[1]]]]]],[11,"new",E,E,8,[[[R[2]]],["self"]]],[11,"add",E,E,8,[[[R[1]],[R[5]],["self"],["into",[R[1]]]]]],[11,"set",E,E,8,[[["vec",[R[1]]],[R[1]],[R[5]],["self"]]]],[11,"new",E,E,9,[[[R[2]]],["self"]]],[11,"set",E,E,9,[[[R[5]],["uuid"],["self"]]]],[11,"generate",E,E,9,[[[R[5]],["self"]],["uuid"]]],[11,"generate_if_missing",E,E,9,[[[R[5]],["self"]]]],[8,R[39],E,E,N,N],[10,"meta",E,E,10,[[["self"]],[R[2]]]],[11,R[7],E,E,10,[[[R[5]],["self"]],["bool"]]],[11,R[8],E,E,4,[[["self"]],["str"]]],[11,"as_json",E,E,4,[[["self"]],[R[9]]]],[0,"ping",R[0],E,N,N],[3,R[40],R[24],E,N,N],[11,"new",E,E,11,[[],["self"]]],[11,"collect",E,E,11,[[[R[10]],["str"],["self"]],[[R[9]],[R[6],[R[9]]]]]],[11,"collect_string",E,E,11,[[[R[10]],["str"],["self"]],[[R[1]],[R[6],[R[1]]]]]],[11,"store_ping",E,"Store a ping to disk in the pings directory.",11,[[["str"],["path"],[R[9]],["self"]],[R[12]]]],[0,"storage",R[0],E,N,N],[3,R[41],R[25],E,N,N],[11,R[11],E,E,12,[[[R[10]],["str"],["self"],["bool"]],[[R[1]],[R[6],[R[1]]]]]],[11,"snapshot_as_json",E,E,12,[[[R[10]],["str"],["self"],["bool"]],[[R[9]],[R[6],[R[9]]]]]],[11,"snapshot_metric",E,"Get the current value of a single metric identified by name.",12,[[[R[10]],["str"],["self"]],[["metric"],[R[6],["metric"]]]]],[6,"Result",R[0],"A specialized [`Result`] type for this crate's operations.",N,N],[11,"new",E,"Initialize the global Glean object.",13,[[["str"],["bool"]],[R[12]]]],[11,"is_initialized",E,"Determine whether the global Glean object is fully…",13,[[["self"]],["bool"]]],[11,"set_upload_enabled",E,"Set whether upload is enabled or not.",13,[[["self"],["bool"]]]],[11,"is_upload_enabled",E,"Determine whether upload is enabled.",13,[[["self"]],["bool"]]],[11,"get_application_id",E,E,13,[[["self"]],["str"]]],[11,"get_data_path",E,E,13,[[["self"]],["path"]]],[11,"storage",E,E,13,[[["self"]],[R[10]]]],[11,R[11],E,E,13,[[["str"],["self"],["bool"]],[R[1]]]],[11,"send_ping",E,"Send a ping by name.",13,[[["str"],["self"],["bool"]],[[R[12],["bool"]],["bool"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[[U]],[R[12]]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[["self"]],[R[19]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[],[R[12]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[["self"]],[R[1]]]],[11,R[14],E,E,3,[[[U]],[R[12]]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[["self"]],[R[19]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[],[R[12]]]],[11,"as_fail",E,E,3,[[["self"]],["fail"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[14],E,E,13,[[[U]],[R[12]]]],[11,R[18],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[["self"]],[R[19]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[],[R[12]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[[T],["self"]]]],[11,R[14],E,E,1,[[[U]],[R[12]]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[["self"]],[R[19]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[],[R[12]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[[U]],[R[12]]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[["self"]],[R[19]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[],[R[12]]]],[11,"from",R[20],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[14],E,E,5,[[[U]],[R[12]]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[["self"]],[R[19]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[],[R[12]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[14],E,E,6,[[[U]],[R[12]]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[["self"]],[R[19]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[],[R[12]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[14],E,E,7,[[[U]],[R[12]]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[["self"]],[R[19]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[],[R[12]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[14],E,E,8,[[[U]],[R[12]]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[["self"]],[R[19]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[],[R[12]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[14],E,E,9,[[[U]],[R[12]]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[["self"]],[R[19]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[],[R[12]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[[T],["self"]]]],[11,R[14],E,E,4,[[[U]],[R[12]]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[["self"]],[R[19]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[],[R[12]]]],[11,"to_bytes",E,E,4,[[["self"]],[["vec",["u8"]],[R[23]],[R[12],["vec",R[23]]]]]],[11,"from",R[24],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[14],E,E,11,[[[U]],[R[12]]]],[11,R[18],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[["self"]],[R[19]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[],[R[12]]]],[11,"from",R[25],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[14],E,E,12,[[[U]],[R[12]]]],[11,R[18],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[["self"]],[R[19]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[],[R[12]]]],[11,"meta",R[20],E,5,[[["self"]],[R[2]]]],[11,"meta",E,E,6,[[["self"]],[R[2]]]],[11,"meta",E,E,7,[[["self"]],[R[2]]]],[11,"meta",E,E,8,[[["self"]],[R[2]]]],[11,"meta",E,E,9,[[["self"]],[R[2]]]],[11,"eq",R[0],E,1,[[[R[26]],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[26]]]],[11,"clone",R[20],E,4,[[["self"]],["metric"]]],[11,"from",R[0],E,3,[[[R[27]],["context",[R[27]]]],["error"]]],[11,"from",E,E,3,[[["handleerror"]],["error"]]],[11,"from",E,E,3,[[["error"]],["error"]]],[11,"from",E,E,3,[[["storeerror"]],["error"]]],[11,"from",E,E,3,[[["error"]],["error"]]],[11,R[28],E,E,1,[[],["self"]]],[11,R[28],E,E,0,[[],[R[2]]]],[11,R[28],R[24],E,11,[[],["self"]]],[11,"fmt",R[0],E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[20],E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[0],E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,R[14],E,E,1,[[["i32"]],[[R[12],[R[26]]],[R[26]]]]],[11,"serialize",R[20],E,4,[[["__s"],["self"]],[R[12]]]],[11,"deserialize",E,E,4,[[["__d"]],[R[12]]]],[11,"cause",R[0],E,3,[[["self"]],[["fail"],[R[6],["fail"]]]]],[11,R[30],E,E,3,[[["self"]],[[R[30]],[R[6],[R[30]]]]]]],"p":[[3,R[31]],[4,R[32]],[4,R[33]],[3,"Error"],[4,"Metric"],[3,R[34]],[3,R[35]],[3,R[36]],[3,R[37]],[3,R[38]],[8,R[39]],[3,R[40]],[3,R[41]],[3,"Glean"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);